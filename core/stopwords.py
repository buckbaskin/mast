STOP_WORDS = [
    "about",
    "acknowledge",
    "add",
    "advanced",
    "ago",
    "all",
    "also",
    "always",
    "am",
    "and",
    "any",
    "are",
    "aren't",
    "args",
    "arxiv",  # arxiv
    "attr",
    "authors",
    "back",
    "be",
    "bibex",
    "blob",
    "book",
    "both",
    "browse",
    "but",
    "buy",
    "can",
    "can't",
    "chapter",
    "cite",
    "code",
    "com",
    "contact",
    "cornell",
    "cwe",
    "dad",
    "data",
    "day",
    "def",
    "del",
    "did",
    "didn't",
    "div",
    "does",
    "doesn't",
    "doi",  # arxiv
    "don't",
    "down",
    "download",
    "each",
    "edu",
    "etc",
    "far",
    "flag",
    "for",
    "from",
    "get",
    "github",
    "got",
    "had",
    "hadn't",
    "has",
    "have",
    "haven't",
    "help",
    "here",
    "how",
    "href",
    "html",
    "http",
    "https",
    "img",
    "into",
    "introduction",
    "is",
    "isn't",
    "its",
    "just",
    "kind",
    "lecture",
    "like",
    "m4v",
    "main",
    "master",
    "mathjax",
    "may",
    "measure",
    "more",
    "mostly",
    "much",
    "name",
    "net",
    "never",
    "noqa",
    "not",
    "notes",
    "one",
    "org",
    "our",
    "out",
    "pdf",
    "provider",
    "readme",
    "references",
    "reply",
    "scholar",
    "search",
    "see",
    "semantic",
    "should",
    "shouldn't",
    "some",
    "src",
    "sub",
    "subjects",
    "support",
    "sure",
    "than",
    "that",
    "the",
    "their",
    "then",
    "there",
    "they",
    "they're",
    "thing",
    "this",
    "time",
    "to",
    "up",
    "use",
    "var",
    "vote",
    "want",
    "wants",
    "was",
    "watch",
    "well",
    "were",
    "what",
    "when",
    "where",
    "which",
    "while",
    "who",
    "why",
    "will",
    "with",
    "won't",
    "would",
    "www",
    "you",
    "you're",
    "your",
    "youtube",
]

if len(STOP_WORDS) != len(set(STOP_WORDS)):
    duplicates = []
    originals = {}
    for word in STOP_WORDS:
        if word in originals:
            duplicates.append(word)
        originals[word] = 1

    raise ValueError(f"Duplciate words in list: {duplicates}")

STOP_WORDS = sorted(STOP_WORDS)
